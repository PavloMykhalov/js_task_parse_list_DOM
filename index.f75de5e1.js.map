{"mappings":"AAAA;AAEA,MAAM,gBAAgB,SAAS,aAAa,CAAC;AAE7C,SAAS,YAAY,YAAY;IAC/B,OAAO,SAAS,aAAa,OAAO,CAAC,OAAO,KAAK;AACnD;AAEA,SAAS;IACP,MAAM,cAAc,MAAM,IAAI,CAAC,cAAc,QAAQ,EAAE,IAAI,CACzD,CAAC,GAAG,IAAM,YAAY,EAAE,OAAO,CAAC,MAAM,IAAI,YAAY,EAAE,OAAO,CAAC,MAAM;IAGxE,YAAY,OAAO,CAAC,CAAC,OAAS,cAAc,WAAW,CAAC;AAC1D;AAEA,SAAS;IACP,MAAM,SAAS,EAAE;IAEjB,cAAc,gBAAgB,CAAC,MAAM,OAAO,CAAC,CAAC;QAC5C,OAAO,IAAI,CAAC;YACV,MAAM,KAAK,WAAW,CAAC,IAAI;YAC3B,UAAU,KAAK,OAAO,CAAC,QAAQ;YAC/B,QAAQ,YAAY,KAAK,OAAO,CAAC,MAAM;YACvC,KAAK,KAAK,OAAO,CAAC,GAAG;QACvB;IACF;IAEA,OAAO;AACT;AAEA;AACA","sources":["src/scripts/main.js"],"sourcesContent":["'use strict';\n\nconst employeesList = document.querySelector('ul');\n\nfunction parseSalary(salaryString) {\n  return parseInt(salaryString.replace(/\\D/g, ''), 10);\n}\n\nfunction sortList() {\n  const sortedItems = Array.from(employeesList.children).sort(\n    (a, b) => parseSalary(b.dataset.salary) - parseSalary(a.dataset.salary),\n  );\n\n  sortedItems.forEach((item) => employeesList.appendChild(item));\n}\n\nfunction getEmployees() {\n  const result = [];\n\n  employeesList.querySelectorAll('li').forEach((item) => {\n    result.push({\n      name: item.textContent.trim(),\n      position: item.dataset.position,\n      salary: parseSalary(item.dataset.salary),\n      age: item.dataset.age,\n    });\n  });\n\n  return result;\n}\n\nsortList();\ngetEmployees();\n"],"names":[],"version":3,"file":"index.f75de5e1.js.map","sourceRoot":"/__parcel_source_root/"}