{"mappings":"ACEA,IAeQ,EAfF,EAAgB,SAAS,aAAa,CAAC,MAE7C,SAAS,EAAY,CAAY,EAC/B,OAAO,SAAS,EAAa,OAAO,CAAC,MAAO,IAAK,GACnD,CAOE,AAJoB,MAAM,IAAI,CAAC,EAAc,QAAQ,EAAE,IAAI,CACzD,SAAC,CAAA,CAAG,CADN,EACY,OAAA,EAAY,EAAE,OAAO,CAAC,MAAM,EAAI,EAAY,EAAE,OAAO,CAAC,MAAM,C,GAG5D,OAAO,CAAC,SAAC,CAArB,EAA8B,OAAA,EAAc,WAAW,CAAC,E,GAIlD,EAAS,EAAE,CAEjB,EAAc,gBAAgB,CAAC,MAAM,OAAO,CAAC,SAAC,CAA9C,EACE,EAAO,IAAI,CAAC,CACV,KAAM,EAAK,WAAW,CAAC,IAAI,GAC3B,SAAU,EAAK,OAAO,CAAC,QAAQ,CAC/B,OAAQ,EAAY,EAAK,OAAO,CAAC,MAAM,EACvC,IAAK,EAAK,OAAO,CAAC,GAAG,AACvB,EACF","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nvar employeesList = document.querySelector(\"ul\");\nfunction parseSalary(salaryString) {\n    return parseInt(salaryString.replace(/\\D/g, \"\"), 10);\n}\nfunction sortList() {\n    var sortedItems = Array.from(employeesList.children).sort(function(a, b) {\n        return parseSalary(b.dataset.salary) - parseSalary(a.dataset.salary);\n    });\n    sortedItems.forEach(function(item) {\n        return employeesList.appendChild(item);\n    });\n}\nfunction getEmployees() {\n    var result = [];\n    employeesList.querySelectorAll(\"li\").forEach(function(item) {\n        result.push({\n            name: item.textContent.trim(),\n            position: item.dataset.position,\n            salary: parseSalary(item.dataset.salary),\n            age: item.dataset.age\n        });\n    });\n    return result;\n}\nsortList();\ngetEmployees();\n\n//# sourceMappingURL=index.db0af5dd.js.map\n","'use strict';\n\nconst employeesList = document.querySelector('ul');\n\nfunction parseSalary(salaryString) {\n  return parseInt(salaryString.replace(/\\D/g, ''), 10);\n}\n\nfunction sortList() {\n  const sortedItems = Array.from(employeesList.children).sort(\n    (a, b) => parseSalary(b.dataset.salary) - parseSalary(a.dataset.salary),\n  );\n\n  sortedItems.forEach((item) => employeesList.appendChild(item));\n}\n\nfunction getEmployees() {\n  const result = [];\n\n  employeesList.querySelectorAll('li').forEach((item) => {\n    result.push({\n      name: item.textContent.trim(),\n      position: item.dataset.position,\n      salary: parseSalary(item.dataset.salary),\n      age: item.dataset.age,\n    });\n  });\n\n  return result;\n}\n\nsortList();\ngetEmployees();\n"],"names":["result","employeesList","document","querySelector","parseSalary","salaryString","parseInt","replace","sortedItems","Array","from","children","sort","a","b","dataset","salary","forEach","item","appendChild","querySelectorAll","push","name","textContent","trim","position","age"],"version":3,"file":"index.db0af5dd.js.map"}